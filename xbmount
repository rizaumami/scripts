#!/usr/bin/env bash

# DESCRIPTION ------------------------------------------------------------------
#
# This is an xbfuse wrapper script to mount XISO (Microsoft Xbox ISO format).
#
# DEPENDENCY -------------------------------------------------------------------
#
# - xbfuse
#   Get it from https://github.com/multimediamike/xbfuse.
#
# CHANGELOG --------------------------------------------------------------------
#
# Sahri Riza Umami
# v0.1  - 2021/01/28 21:30:03
#         Initial realase.
# v0.2  - 2023/07/02 18:27:58
# v0.3  - 2023/07/16 09:42:14
#         - Remove mount detection
#
# LICENSE ----------------------------------------------------------------------
#
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org>
#
# ------------------------------------------------------------------------------

# VARIABLES --------------------------------------------------------------------

# Mount directory.
# $HOME is preferred because mounted xiso would be shown in GUI file manager.
# DO NOT use non empty directoriy to avoid losing data when script clearing this
# mountpoint.
MNTDIR="$HOME/XBMount"
# PATH to xbfuse binary.
XBFUSE="$HOME/.local/bin/xbfuse"

# FUNCTIONS --------------------------------------------------------------------

print() {
  printf ':: %s\n' "$@"
}

# Print message in green.
print_g() {
  printf '\e[32m:: %s\n\e[m' "$@"
}

# Print message in brown.
print_w() {
  printf '\e[33m:: %s\n\e[m' "$@"
}

print_usage() {
  printf '%s\n' "
Usage: ${0##*/} OPTIONS

OPTIONS:
  -na --nemo       Create Nemo action file.
  -h --help        Print this text and then exit.
  or XISO file to be mounted.

Example:
  - ${0##*/} -h
  - ${0##*/} -na
  - ${0##*/} $HOME/CoolGame.iso
"
  exit
}

# MAIN -------------------------------------------------------------------------

# Exit if user doesn't have sufficient permission on mountpoint.
mkdir -p "$MNTDIR" || exit

# Clean up unused mountpoint.
# No need to check mopuntpoint as rmdir will fail on non empty directories.
rmdir "$MNTDIR"/* 2>/dev/null

if [[ $# -eq 0 ]]; then
  print_w 'No files specified.'
  print_usage
fi

if [[ $# -gt 1 ]]; then
  print_w 'Too much arguments.'
  print_usage
fi

case $1 in
  -h|--help)
    echo -e "\n${0##*/} is an xbfuse wrapper script to mount XISO (Microsoft Xbox ISO format)."
    print_usage
  ;;
  -na|--nemo)
  echo "[Nemo Action]
Name=Mount Xbox ISO
Comment=Mount XISO (The Original Xbox's ISO)
Selection=s
Exec=$0 %F
Stock-Id=gtk-cdrom
Extensions=iso;" > "$HOME/.local/share/nemo/actions/xisomount.nemo_action"
  ;;
  *)
    # Check if xbfuse exist in user's PATH.
    if [[ -z $(command -v "$XBFUSE") ]] && [[ -z $(command -v xbfuse) ]]; then
      print_w 'xbfuse not found.' \
              "Get it from: https://github.com/multimediamike/xbfuse"
      exit
    fi

    # Check if input exist.
    if [[ ! -f $1 ]]; then
      zenity --warning --title='File not found' --text="$1 not found."
      print_w "Cannot mount $1" 'No such file'
      exit
    fi

    # Get basename.
    XISO="${1##*/}"
    XISO="$MNTDIR/${XISO%.*}"

    mkdir -p "$XISO"
    # Also check $XBFUSE error code to check if mount is succesful
    if ! "$XBFUSE" "$1" "$XISO"; then
      print_w "Unable to mount ${1}."
    else
      print_g "$1" 'has been successfully mounted on:' "$XISO"
    fi
    # user_allow_other - Using the allow_other mount option works fine as root,
    # in order to have it work as user you need user_allow_other in
    # /etc/fuse.conf as well. (This option allows users to use the allow_other
    # option.) You need allow_other if you want users other than the owner to
    # access a mounted fuse.
    #"$XBFUSE" "$1" "$XISO" -o allow_other,default_permissions
  ;;
esac
