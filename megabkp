#!/usr/bin/env bash

# Compress files(s) to 7zip archive and encrypt it. Used for sensitive
# documents mean to be synced to cloud storage service.
#
# Dependencies:
# - pass
# - 7zip
#
# Sahri Riza Umami
#   v0.1 - 2020/05/12 10:31:36
#        - Initial release
#   v0.2 - 2020/06/04 17:09:42
#        - Files to be backed up saved as an array then iterated by 7zip
#
# LICENSE ----------------------------------------------------------------------
#
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org>
#
# ------------------------------------------------------------------------------

# VARIABLES --------------------------------------------------------------------

# Backup filename.
BKPNAME="$(date "+%F")-megabkp"
# Output archived files.
BKPDIR="/mnt/shared/MEGAsync"
# Files to be backed up.
declare -a BKPFILES=( \
  "$HOME/.gnupg" \
  "$HOME/.ssh" \
  "$HOME/.password-store" \
  /mnt/datahdd/Bizz \
  /mnt/datahdd/Notes \
  '/mnt/datahdd/Tugas SD/Administrasi Kelas/2020-2021/Semester I/Administrasi Guru Kelas VI 2020-2021.1.ods'
)
# Do not archive these files
declare -a EXCLUDED=(bibilintik PPOB)
# I use pass to manage my passwords.
# PASS is the entry in pass for this megabkp encrypted archive.
PASS='megasync'
# Pass won't works directly in script because it's output ended with newline.
# Bash array with -t remove the newline.
mapfile -t PASSWORD < <(pass $PASS)

# FUNCTIONS --------------------------------------------------------------------

# Checking dependencies
checking_deps() {
  declare -a DEPS=(7z pass)
  for ((NUM=${#DEPS[@]},i=0; i<NUM;i++)); do
    if command -v "${DEPS[i]}" &>/dev/null ; then
      unset -v 'DEPS[i]'
    fi
  done

  # Exit if dependencies not found.
  if [[ "${#DEPS[@]}" -gt 0 ]]; then
    printf '\e[31m!! %s\n\e[m'  'Package(s) not found'
    printf '\e[33m:: %s\n\e[m' 'Install the proper distribution package for your system:'
    printf '   - %s\n' "${DEPS[@]}"
    exit 1
  fi
}

print_usage() {
  printf '%s\n' "
  ${0##*/} will compress files(s) to 7zip archive and encrypt it.
  Used for sensitive documents mean to be synced to cloud storage service.

  Usage: ${0##*/}
"
  exit
}

# MAIN -------------------------------------------------------------------------

# If more than one argument passed, print script's usage help.
[[ "$#" -ge 1 ]] && print_usage

checking_deps

# Loop over array of the files to be backed up then archive it.
for ((NUM=${#BKPFILES[@]},i=0; i<NUM;i++)); do
  7z a -mhe=on -p"${PASSWORD[0]}" -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on \
    $(printf -- '-xr!%s ' "${EXCLUDED[@]}") "$BKPDIR/$BKPNAME.7z" "${BKPFILES[i]}"
done
