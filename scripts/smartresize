#!/usr/bin/env bash

# Resize image smartly.
#
# Dependencies:
#   - imagemagick
# Sahri Riza Umami
#   v0.1 - 2020-05-09 13:46:51
#        - Initial release
#   v0.2 - 2020/06/20 21:49:20
#        - Check for existing output folder
#        - Check for input files count
#
# Source: https://www.smashingmagazine.com/2015/06/efficient-image-resizing-with-imagemagick/
#
# LICENSE ----------------------------------------------------------------------
#
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org>
#
# ------------------------------------------------------------------------------

# VARIABLES --------------------------------------------------------------------

THUMBNAIL='1366'
OUTPUTFOLDER='resized'

# FUNCTIONS --------------------------------------------------------------------

smartresize() {
mogrify -path "$2" \
        -filter Triangle \
        -define filter:support=2 \
        -thumbnail "$THUMBNAIL" \
        -unsharp 0.25x0.08+8.3+0.045 \
        -dither None \
        -posterize 136 -quality 82 \
        -define jpeg:fancy-upsampling=off \
        -define png:compression-filter=5 \
        -define png:compression-level=9 \
        -define png:compression-strategy=1 \
        -define png:exclude-chunk=all \
        -interlace none \
        -colorspace sRGB "$1"
}

print_usage() {
  printf '%s\n' "
  ${0##*/} is a script to efficiently resize jpg and png image(s)
  using ImageMagick.


  Usage:
    Run this script in the same directory as image(s) you want to
    resize.

    ${0##*/} OPTION

  OPTION:
    -h, --help       show this message and exit
"
  exit
}

# MAIN -------------------------------------------------------------------------

[[ "$#" -ge 1 ]] && print_usage

if [ -d ./"$OUTPUTFOLDER" ]; then
  echo ":: $OUTPUTFOLDER is found. Continue? (yY[nN])"
  read -rp ' ' overwrite

  case "$overwrite" in
    y|Y)
      echo ":: Deleting $OUTPUTFOLDER..."
      rm -r "$OUTPUTFOLDER"
    ;;
    *)
      echo ":: Exit."
      exit
    ;;
  esac
fi

# Checking dependenciy
if [[ -z $(command -v mogrify) ]]; then
  echo "Mogrify not found!
This script utilize mogrify to resize image.
On Debian based distro it's distributed in imagemagick.
Do sudo apt install imagemagick to install."
  exit
fi

mapfile -t IMAGES < <(find . -maxdepth 1 -type f \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" \))

if [[ "${#IMAGES[@]}" -gt 0 ]]; then
  [[ -d "./$OUTPUTFOLDER" ]] || mkdir "$OUTPUTFOLDER"

  while read -r img; do
    echo ":: Resizing $img"
    smartresize "$img" "$OUTPUTFOLDER"
  done < <(find . -maxdepth 1 -type f \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" \))

  echo ":: Done. Resized image(s) can be found in ./$OUTPUTFOLDER."
fi
